{"version":3,"sources":["todo_test.cljs"],"mappings":"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","names":["cljs.test/test-var","*report*-orig-val__18581","rehook.test/*report*","*report*-temp-val__18582","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","system__18564__auto__","system-args__18565__auto__","invoked-system__18566__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","ctx-f__18567__auto__","props-f__18568__auto__","component__18569__auto__","shutdown-f__18570__auto__","scenes__18571__auto__","rehook.test/init","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/deref","todo-test/todo-test--clear-completed","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","rehook.test/registry","cljs.core/assoc","scenes","rehook.demo.todo/system","cljs.core/identity","rehook.demo.todo/todo-app","component__18554__auto__","rehook.test/unmount!","initial-render","rehook.test.mount_BANG_.cljs$core$IFn$_invoke$arity$1","*scene*-orig-val__18583","rehook.test/*scene*","*scene*-temp-val__18584","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","res__18548__auto__","cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/conj","value__10148__auto__","cljs.test/do-report","t__10190__auto__","e18585","cljs.test/update-current-env!","cljs.core/rest","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","rehook.test.children.cljs$core$IFn$_invoke$arity$1","*scene*-orig-val__18586","*scene*-temp-val__18587","e18588","js/Error","e__18542__auto__","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3","rehook.test.invoke_prop.cljs$core$IFn$_invoke$arity$3","render2","rehook.test.mount_BANG_.cljs$core$IFn$_invoke$arity$2","*scene*-orig-val__18589","*scene*-temp-val__18590","e18591","*scene*-orig-val__18592","*scene*-temp-val__18593","e18594","cljs.core/clj->js","render3","*scene*-orig-val__18595","*scene*-temp-val__18596","e18597","rehook.test.get_prop.cljs$core$IFn$_invoke$arity$2","*scene*-orig-val__18598","*scene*-temp-val__18599","e18600","render4","*scene*-orig-val__18601","*scene*-temp-val__18602","e18603","*scene*-orig-val__18604","*scene*-temp-val__18605","e18606","cljs.core/empty?","*report*-orig-val__18607","*report*-temp-val__18608","todo-test/todo-stats--items-left","rehook.demo.todo/todo-stats","*scene*-orig-val__18609","*scene*-temp-val__18610","e18611","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns todo-test\n  (:require [rehook.test :as rehook.test :refer-macros [with-component-mounted defuitest is io]]\n            [rehook.demo.todo :as todo]))\n\n(defuitest todo-test--clear-completed\n  [scenes {:system      todo/system\n           :system/args []\n           :shutdown-f  identity\n           :ctx-f       identity\n           :props-f     identity\n           :component   todo/todo-app}]\n\n  (with-component-mounted [initial-render (rehook.test/mount! scenes)]\n    (is initial-render \"Initial render should show 4 TODO items\"\n      (= (rehook.test/children :clear-completed) [\"Clear completed \" 4]))\n\n    (io initial-render \"Click 'Clear completed'\"\n      (rehook.test/invoke-prop :clear-completed :onClick [{}]))\n\n    (with-component-mounted [render2 (rehook.test/mount! scenes initial-render)]\n      (is render2 \"After clicking 'Clear Completed' it should clear TODO items\"\n        (nil? (rehook.test/children :clear-completed)))\n\n      (io render2 \"Invoking todo-input onChange\"\n        (rehook.test/invoke-prop :todo-input :onChange [(clj->js {:target {:value \"foo\"}})]))\n\n      (with-component-mounted [render3 (rehook.test/mount! scenes render2)]\n        (is render3 \"After inputting text, value should appear in input\"\n          (= \"foo\" (rehook.test/get-prop :todo-input :value)))\n\n        (io render3 \"Pressing enter button on todo-input\"\n          (rehook.test/invoke-prop :todo-input :onKeyDown [(clj->js {:which 13})]))\n\n        (with-component-mounted [render4 (rehook.test/mount! scenes render3)]\n          (is render4 \"After pressing enter button there should be one item to do\"\n            (= 1 1))\n\n          (is render4 \"After pressing enter button, input's value should be cleared.\"\n            (empty? (rehook.test/get-prop :todo-input :value))))))))\n\n\n(defuitest todo-stats--items-left\n  [scenes {:system      todo/system\n           :system/args []\n           :shutdown-f  identity\n           :ctx-f       identity\n           :props-f     identity\n           :component   todo/todo-stats}]\n\n  (with-component-mounted [initial-render (rehook.test/mount! scenes)]\n    (is initial-render \"Initial render should show 0 items left\"\n      (not= (rehook.test/children :items-left) [0 \" items left\"]))))"]}